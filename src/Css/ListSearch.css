@font-face {
    font-family: "Zoho_Puvi_Bold";
    src: url("https://static.zohocdn.com/zohofonts/zohopuvi/4.0/Zoho_Puvi_Bold.eot") format("embedded-opentype"), url("https://static.zohocdn.com/zohofonts/zohopuvi/4.0/Zoho_Puvi_Bold.woff2") format("woff2"), url("https://static.zohocdn.com/zohofonts/zohopuvi/4.0/Zoho_Puvi_Bold.otf") format("opentype");
    font-style: normal;
    font-weight: normal;
    font-display: swap;
}

:root {
    --padding: 10px;
    --min_width: 90%;
    --max_width: 90%;
    --max_heigth: 100vh;
    --min_heigth: 100vh;
    --marginTop: 10px;
    --marginBottom: 10px;
    --borderRadius: 10px;
    --grayBorder: 1px solid #ddd;
}

.listSearch {
    background-color: #f3f4f6;
}

/* total module head */
.searchListMain {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* search field */
.inputSearchFieldSearch {
    min-width: var(--min_width);
    max-width: var(--max_width);
    margin-top: 10px;
    position: sticky;
    top: 0;
    z-index: 1000;
}

.searching {
    outline: none;
    padding: var(--padding);
    max-width: 99.9%;
    min-width: 99.9%;
    background-color: white;
    border: var(--grayBorder);
    border-radius: var(--borderRadius);
}

/* main head of search list */
.searchResultListMain {
    margin-top: var(--marginTop);
    min-width: var(--min_width);
    max-width: var(--max_width);
    min-height: var(--min_heigth);
    max-height: var(--max_heigth);
    border: var(--grayBorder);
    border-radius: var(--borderRadius);
    box-shadow: 1px 1px 10px #ddd;
    overflow: scroll;
    padding: var(--padding);
    background-color: white;
}

/* search result list */
.searchResultList {
    border: var(--grayBorder);
    padding: 10px;
    border-radius: var(--borderRadius);
    margin-bottom: var(--marginBottom);
    transition: 0.3s all ease-in-out;
}

.searchResultList:hover {
    cursor: pointer;
    box-shadow: 1px 1px 10px #ddd;
    transform: translateY(-5px);
}

.listValueName {
    padding: 6px;
    transition: 0.1s all ease-in;
}

.listValueName:hover {
    transform: translateX(5px);
    color: #7e8c7d;
}

.imagesHead {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    max-height: 500px;
}

.imagesRow {
    min-width: 100px;
    max-width: 100px;
    min-height: 100px;
    max-height: 100px;
    margin-top: var(--marginTop);
    border: var(--grayBorder);
    border-radius: var(--borderRadius);
    transition: 0.3s all ease-in-out;
}

.imagesRow:hover {}

.image {
    border-radius: var(--borderRadius);
    padding: 10px;
    transition: 0.3s all ease-in-out;
}

.image:hover {
    transform: translateY(-5px)
}

.notFoundImagesRow {
    min-height: var(--min_heigth);
    max-height: var(--max_heigth);
    display: flex;
    justify-content: center;
    align-items: center;
}

.notFoundImageColum {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.notFoundImageColumRowText {
    font-size: x-large;
    font-family: "Zoho_Puvi_Bold"
}

.noResultImage {
    max-height: 300px;
    min-width: 300px;
    max-width: 300px;
}

.GeminiListSearch {
    padding: var(--padding);
}

.indicatorSText {
    padding: var(--padding);
    font-family: "Zoho_Puvi_Bold";
    font-size: large;
    color: #7e8c7d;
    transition: 0.2 all ease-in-out;
}

/* styles.css or in your component's style section */
.fade-in {
    opacity: 0;
    animation: fadeInAnimation 1s forwards;
}

.llmResponce{
    border-bottom: var(--grayBorder);
    color: #7e8c7d;
    padding: var(--padding);
}


@keyframes fadeInAnimation {
    to {
        opacity: 1;
    }
}